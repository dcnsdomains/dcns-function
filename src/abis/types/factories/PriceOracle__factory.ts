/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { PriceOracle, PriceOracleInterface } from "../PriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_rentPrices",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "prices",
        type: "uint256[]",
      },
    ],
    name: "RentPriceChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "getRentPrices",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rentPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_rentPrices",
        type: "uint256[]",
      },
    ],
    name: "setPrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018253803806200182583398181016040528101906200003791906200048f565b620000576200004b6200006f60201b60201c565b6200007760201b60201c565b62000068816200013b60201b60201c565b5062000655565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6200014b620001a060201b60201c565b8060019080519060200190620001639291906200025a565b507f73422d94aedd596c2d4d39f27a01033adc390a9054efaf259afefd95ef7331df81604051620001959190620005ae565b60405180910390a150565b620001b06200006f60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620001d66200023160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200022f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002269062000633565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b82805482825590600052602060002090810192821562000299579160200282015b82811115620002985782518255916020019190600101906200027b565b5b509050620002a89190620002ac565b5090565b5b80821115620002c7576000816000905550600101620002ad565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200032f82620002e4565b810181811067ffffffffffffffff82111715620003515762000350620002f5565b5b80604052505050565b600062000366620002cb565b905062000374828262000324565b919050565b600067ffffffffffffffff821115620003975762000396620002f5565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b620003c281620003ad565b8114620003ce57600080fd5b50565b600081519050620003e281620003b7565b92915050565b6000620003ff620003f98462000379565b6200035a565b90508083825260208201905060208402830185811115620004255762000424620003a8565b5b835b818110156200045257806200043d8882620003d1565b84526020840193505060208101905062000427565b5050509392505050565b600082601f830112620004745762000473620002df565b5b815162000486848260208601620003e8565b91505092915050565b600060208284031215620004a857620004a7620002d5565b5b600082015167ffffffffffffffff811115620004c957620004c8620002da565b5b620004d7848285016200045c565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6200051781620003ad565b82525050565b60006200052b83836200050c565b60208301905092915050565b6000602082019050919050565b60006200055182620004e0565b6200055d8185620004eb565b93506200056a83620004fc565b8060005b83811015620005a15781516200058588826200051d565b9750620005928362000537565b9250506001810190506200056e565b5085935050505092915050565b60006020820190508181036000830152620005ca818462000544565b905092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006200061b602083620005d2565b91506200062882620005e3565b602082019050919050565b600060208201905081810360008301526200064e816200060c565b9050919050565b6111c080620006656000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063715018a61161005b578063715018a61461013b57806379cf92d3146101455780638da5cb5b14610161578063f2fde38b1461017f57610088565b806301ffc9a71461008d57806306d5d0b6146100bd57806319b989a0146100ed578063363719961461011d575b600080fd5b6100a760048036038101906100a291906109e9565b61019b565b6040516100b49190610a31565b60405180910390f35b6100d760048036038101906100d29190610a82565b61026d565b6040516100e49190610abe565b60405180910390f35b61010760048036038101906101029190610b3e565b610291565b6040516101149190610abe565b60405180910390f35b61012561034c565b6040516101329190610c5c565b60405180910390f35b6101436103a4565b005b61015f600480360381019061015a9190610dcd565b6103b8565b005b610169610411565b6040516101769190610e57565b60405180910390f35b61019960048036038101906101949190610e9e565b61043a565b005b60007f01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e27bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061026657507f19b989a0be57971ea4444be08149b40fa0034a647cd7ae1f5db09917244985957bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6001818154811061027d57600080fd5b906000526020600020016000915090505481565b6000806102e185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506104bd565b90506001805490508111156102f95760018054905090505b6000811161030657600080fd5b61034283600180846103189190610efa565b8154811061032957610328610f2e565b5b906000526020600020015461078590919063ffffffff16565b9150509392505050565b6060600180548060200260200160405190810160405280929190818152602001828054801561039a57602002820191906000526020600020905b815481526020019060010190808311610386575b5050505050905090565b6103ac6107c9565b6103b66000610847565b565b6103c06107c9565b80600190805190602001906103d6929190610913565b507f73422d94aedd596c2d4d39f27a01033adc390a9054efaf259afefd95ef7331df816040516104069190610c5c565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104426107c9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a890610fe0565b60405180910390fd5b6104ba81610847565b50565b60008060008084519050600092505b808210156107795760008583815181106104e9576104e8610f2e565b5b602001015160f81c60f81b9050600382118015610511575060028261050e9190610efa565b84105b8015610542575060ef60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b801561059c575060b860f81b8660018561055c9190611000565b8151811061056d5761056c610f2e565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80156105f65750608f60f81b866002856105b69190611000565b815181106105c7576105c6610f2e565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b15610608576000945050505050610780565b608060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916101561064a576001836106439190611000565b9250610765565b60e060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916101561068c576002836106859190611000565b9250610764565b60f060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610156106ce576003836106c79190611000565b9250610763565b60f8801b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916101561070f576004836107089190611000565b9250610762565b60fc60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610156107515760058361074a9190611000565b9250610761565b60068361075e9190611000565b92505b5b5b5b5b50828061077190611034565b9350506104cc565b8293505050505b919050565b600080830361079757600090506107c3565b600082846107a5919061107c565b90508284826107b491906110ed565b146107be57600080fd5b809150505b92915050565b6107d161090b565b73ffffffffffffffffffffffffffffffffffffffff166107ef610411565b73ffffffffffffffffffffffffffffffffffffffff1614610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c9061116a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b82805482825590600052602060002090810192821561094f579160200282015b8281111561094e578251825591602001919060010190610933565b5b50905061095c9190610960565b5090565b5b80821115610979576000816000905550600101610961565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6109c681610991565b81146109d157600080fd5b50565b6000813590506109e3816109bd565b92915050565b6000602082840312156109ff576109fe610987565b5b6000610a0d848285016109d4565b91505092915050565b60008115159050919050565b610a2b81610a16565b82525050565b6000602082019050610a466000830184610a22565b92915050565b6000819050919050565b610a5f81610a4c565b8114610a6a57600080fd5b50565b600081359050610a7c81610a56565b92915050565b600060208284031215610a9857610a97610987565b5b6000610aa684828501610a6d565b91505092915050565b610ab881610a4c565b82525050565b6000602082019050610ad36000830184610aaf565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610afe57610afd610ad9565b5b8235905067ffffffffffffffff811115610b1b57610b1a610ade565b5b602083019150836001820283011115610b3757610b36610ae3565b5b9250929050565b600080600060408486031215610b5757610b56610987565b5b600084013567ffffffffffffffff811115610b7557610b7461098c565b5b610b8186828701610ae8565b93509350506020610b9486828701610a6d565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610bd381610a4c565b82525050565b6000610be58383610bca565b60208301905092915050565b6000602082019050919050565b6000610c0982610b9e565b610c138185610ba9565b9350610c1e83610bba565b8060005b83811015610c4f578151610c368882610bd9565b9750610c4183610bf1565b925050600181019050610c22565b5085935050505092915050565b60006020820190508181036000830152610c768184610bfe565b905092915050565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610cc782610c7e565b810181811067ffffffffffffffff82111715610ce657610ce5610c8f565b5b80604052505050565b6000610cf961097d565b9050610d058282610cbe565b919050565b600067ffffffffffffffff821115610d2557610d24610c8f565b5b602082029050602081019050919050565b6000610d49610d4484610d0a565b610cef565b90508083825260208201905060208402830185811115610d6c57610d6b610ae3565b5b835b81811015610d955780610d818882610a6d565b845260208401935050602081019050610d6e565b5050509392505050565b600082601f830112610db457610db3610ad9565b5b8135610dc4848260208601610d36565b91505092915050565b600060208284031215610de357610de2610987565b5b600082013567ffffffffffffffff811115610e0157610e0061098c565b5b610e0d84828501610d9f565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4182610e16565b9050919050565b610e5181610e36565b82525050565b6000602082019050610e6c6000830184610e48565b92915050565b610e7b81610e36565b8114610e8657600080fd5b50565b600081359050610e9881610e72565b92915050565b600060208284031215610eb457610eb3610987565b5b6000610ec284828501610e89565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f0582610a4c565b9150610f1083610a4c565b9250828203905081811115610f2857610f27610ecb565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610fca602683610f5d565b9150610fd582610f6e565b604082019050919050565b60006020820190508181036000830152610ff981610fbd565b9050919050565b600061100b82610a4c565b915061101683610a4c565b925082820190508082111561102e5761102d610ecb565b5b92915050565b600061103f82610a4c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361107157611070610ecb565b5b600182019050919050565b600061108782610a4c565b915061109283610a4c565b92508282026110a081610a4c565b915082820484148315176110b7576110b6610ecb565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110f882610a4c565b915061110383610a4c565b925082611113576111126110be565b5b828204905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611154602083610f5d565b915061115f8261111e565b602082019050919050565b6000602082019050818103600083015261118381611147565b905091905056fea26469706673582212204cd9276818ea34f6f52adafa2ea498e7d2cdcb1a24c3aaaf709b2522bc4cbc7764736f6c63430008110033";

type PriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PriceOracle__factory extends ContractFactory {
  constructor(...args: PriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rentPrices: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PriceOracle> {
    return super.deploy(_rentPrices, overrides || {}) as Promise<PriceOracle>;
  }
  override getDeployTransaction(
    _rentPrices: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_rentPrices, overrides || {});
  }
  override attach(address: string): PriceOracle {
    return super.attach(address) as PriceOracle;
  }
  override connect(signer: Signer): PriceOracle__factory {
    return super.connect(signer) as PriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceOracleInterface {
    return new utils.Interface(_abi) as PriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceOracle {
    return new Contract(address, _abi, signerOrProvider) as PriceOracle;
  }
}
