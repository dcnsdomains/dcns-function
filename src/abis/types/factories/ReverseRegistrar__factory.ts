/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ReverseRegistrar,
  ReverseRegistrarInterface,
} from "../ReverseRegistrar";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Registry",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "contract NameResolver",
        name: "_resolver",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "ControllerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract NameResolver",
        name: "resolver",
        type: "address",
      },
    ],
    name: "DefaultResolverChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "ReverseClaimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "claimForAddr",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "claimWithResolver",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "claimWithResolverForAddr",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "controllers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultResolver",
    outputs: [
      {
        internalType: "contract NameResolver",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "node",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract Registry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "setDefaultResolver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setNameForAddr",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ee838038062001ee8833981810160405281019062000037919062000270565b620000576200004b620000e160201b60201c565b620000e960201b60201c565b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620002b7565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001df82620001b2565b9050919050565b6000620001f382620001d2565b9050919050565b6200020581620001e6565b81146200021157600080fd5b50565b6000815190506200022581620001fa565b92915050565b60006200023882620001d2565b9050919050565b6200024a816200022b565b81146200025657600080fd5b50565b6000815190506200026a816200023f565b92915050565b600080604083850312156200028a5762000289620001ad565b5b60006200029a8582860162000214565b9250506020620002ad8582860162000259565b9150509250929050565b611c2180620002c76000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638d9522b811610097578063c66485b211610066578063c66485b2146102ae578063da8c229e146102ca578063e0dba60f146102fa578063f2fde38b14610316576100f5565b80638d9522b8146102005780638da5cb5b14610230578063bffbe61c1461024e578063c47f00271461027e576100f5565b80634709bf4b116100d35780634709bf4b1461018a578063715018a6146101ba5780637b103999146101c4578063828eab0e146101e2576100f5565b80630ccc4a7f146100fa5780630f5a54661461012a5780631e83409a1461015a575b600080fd5b610114600480360381019061010f9190611254565b610332565b60405161012191906112c0565b60405180910390f35b610144600480360381019061013f91906112db565b6104c1565b60405161015191906112c0565b60405180910390f35b610174600480360381019061016f919061131b565b6104d6565b60405161018191906112c0565b60405180910390f35b6101a4600480360381019061019f91906112db565b6104eb565b6040516101b191906112c0565b60405180910390f35b6101c261067a565b005b6101cc61068e565b6040516101d991906113a7565b60405180910390f35b6101ea6106b4565b6040516101f791906113e3565b60405180910390f35b61021a60048036038101906102159190611544565b6106da565b60405161022791906112c0565b60405180910390f35b6102386109ee565b60405161024591906115c2565b60405180910390f35b6102686004803603810190610263919061131b565b610a17565b60405161027591906112c0565b60405180910390f35b610298600480360381019061029391906115dd565b610a74565b6040516102a591906112c0565b60405180910390f35b6102c860048036038101906102c3919061131b565b610a88565b005b6102e460048036038101906102df919061131b565b610b86565b6040516102f19190611641565b60405180910390f35b610314600480360381019061030f9190611688565b610ba6565b005b610330600480360381019061032b919061131b565b610c57565b005b6000833373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806103b85750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b8061045d5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e985e9c582336040518363ffffffff1660e01b815260040161041b9291906116c8565b602060405180830381865afa158015610438573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045c9190611706565b5b8061046d575061046c81610cda565b5b6104ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a3906117dc565b60405180910390fd5b6104b7858585610d89565b9150509392505050565b60006104ce338484610d89565b905092915050565b60006104e433836000610d89565b9050919050565b6000823373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806105715750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b806106165750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e985e9c582336040518363ffffffff1660e01b81526004016105d49291906116c8565b602060405180830381865afa1580156105f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106159190611706565b5b80610626575061062581610cda565b5b610665576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065c906117dc565b60405180910390fd5b61067184846000610d89565b91505092915050565b610682611010565b61068c600061108e565b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000833373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806107605750600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b806108055750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e985e9c582336040518363ffffffff1660e01b81526004016107c39291906116c8565b602060405180830381865afa1580156107e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108049190611706565b5b80610815575061081481610cda565b5b610854576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084b906117dc565b60405180910390fd5b60006108838630600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610d89565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637737221382866040518363ffffffff1660e01b81526004016108e292919061186a565b600060405180830381600087803b1580156108fc57600080fd5b505af1158015610910573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306ab59237f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b61097f89611152565b886040518463ffffffff1660e01b815260040161099e9392919061189a565b6020604051808303816000875af11580156109bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e191906118fd565b5080925050509392505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b610a4683611152565b604051602001610a5792919061194b565b604051602081830303815290604052805190602001209050919050565b6000610a813333846106da565b9050919050565b610a90611010565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610aff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af6906119e9565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167feae17a84d9eb83d8c8eb317f9e7d64857bc363fa51674d996c023f4340c577cf60405160405180910390a250565b60016020528060005260406000206000915054906101000a900460ff1681565b610bae611010565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f4c97694570a07277810af7e5669ffd5f6a2d6b74b6e9a274b8b870fd5114cf8782604051610c4b9190611641565b60405180910390a25050565b610c5f611010565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc590611a7b565b60405180910390fd5b610cd78161108e565b50565b60008173ffffffffffffffffffffffffffffffffffffffff16638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d4457506040513d601f19601f82011682018060405250810190610d419190611ab0565b60015b610d515760009050610d84565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16149150505b919050565b600080610d9585611152565b905060007f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b82604051602001610dcf92919061194b565b6040516020818303038152906040528051906020012090506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630178b8bf836040518263ffffffff1660e01b8152600401610e4491906112c0565b602060405180830381865afa158015610e61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e859190611ab0565b905060008073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610ef157508173ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614155b9050600081610f005782610f02565b865b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635ef2c7f07f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260001b878b8560006040518663ffffffff1660e01b8152600401610f8b959493929190611b2c565b600060405180830381600087803b158015610fa557600080fd5b505af1158015610fb9573d6000803e3d6000fd5b50505050838973ffffffffffffffffffffffffffffffffffffffff167f6ada868dd3058cf77a48a74489fd7963688e5464b2b0fa957ace976243270e9260405160405180910390a383955050505050509392505050565b6110186111da565b73ffffffffffffffffffffffffffffffffffffffff166110366109ee565b73ffffffffffffffffffffffffffffffffffffffff161461108c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108390611bcb565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060285b60008111156111cd576001810390507f3031323334353637383961626364656600000000000000000000000000000000600f84161a81536010830492506001810390507f3031323334353637383961626364656600000000000000000000000000000000600f84161a8153601083049250611157565b5060286000209050919050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611221826111f6565b9050919050565b61123181611216565b811461123c57600080fd5b50565b60008135905061124e81611228565b92915050565b60008060006060848603121561126d5761126c6111ec565b5b600061127b8682870161123f565b935050602061128c8682870161123f565b925050604061129d8682870161123f565b9150509250925092565b6000819050919050565b6112ba816112a7565b82525050565b60006020820190506112d560008301846112b1565b92915050565b600080604083850312156112f2576112f16111ec565b5b60006113008582860161123f565b92505060206113118582860161123f565b9150509250929050565b600060208284031215611331576113306111ec565b5b600061133f8482850161123f565b91505092915050565b6000819050919050565b600061136d611368611363846111f6565b611348565b6111f6565b9050919050565b600061137f82611352565b9050919050565b600061139182611374565b9050919050565b6113a181611386565b82525050565b60006020820190506113bc6000830184611398565b92915050565b60006113cd82611374565b9050919050565b6113dd816113c2565b82525050565b60006020820190506113f860008301846113d4565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61145182611408565b810181811067ffffffffffffffff821117156114705761146f611419565b5b80604052505050565b60006114836111e2565b905061148f8282611448565b919050565b600067ffffffffffffffff8211156114af576114ae611419565b5b6114b882611408565b9050602081019050919050565b82818337600083830152505050565b60006114e76114e284611494565b611479565b90508281526020810184848401111561150357611502611403565b5b61150e8482856114c5565b509392505050565b600082601f83011261152b5761152a6113fe565b5b813561153b8482602086016114d4565b91505092915050565b60008060006060848603121561155d5761155c6111ec565b5b600061156b8682870161123f565b935050602061157c8682870161123f565b925050604084013567ffffffffffffffff81111561159d5761159c6111f1565b5b6115a986828701611516565b9150509250925092565b6115bc81611216565b82525050565b60006020820190506115d760008301846115b3565b92915050565b6000602082840312156115f3576115f26111ec565b5b600082013567ffffffffffffffff811115611611576116106111f1565b5b61161d84828501611516565b91505092915050565b60008115159050919050565b61163b81611626565b82525050565b60006020820190506116566000830184611632565b92915050565b61166581611626565b811461167057600080fd5b50565b6000813590506116828161165c565b92915050565b6000806040838503121561169f5761169e6111ec565b5b60006116ad8582860161123f565b92505060206116be85828601611673565b9150509250929050565b60006040820190506116dd60008301856115b3565b6116ea60208301846115b3565b9392505050565b6000815190506117008161165c565b92915050565b60006020828403121561171c5761171b6111ec565b5b600061172a848285016116f1565b91505092915050565b600082825260208201905092915050565b7f526576657273655265676973747261723a2043616c6c6572206973206e6f742060008201527f6120636f6e74726f6c6c6572206f7220617574686f726973656420627920616460208201527f6472657373206f7220746865206164647265737320697473656c660000000000604082015250565b60006117c6605b83611733565b91506117d182611744565b606082019050919050565b600060208201905081810360008301526117f5816117b9565b9050919050565b600081519050919050565b60005b8381101561182557808201518184015260208101905061180a565b60008484015250505050565b600061183c826117fc565b6118468185611733565b9350611856818560208601611807565b61185f81611408565b840191505092915050565b600060408201905061187f60008301856112b1565b81810360208301526118918184611831565b90509392505050565b60006060820190506118af60008301866112b1565b6118bc60208301856112b1565b6118c960408301846115b3565b949350505050565b6118da816112a7565b81146118e557600080fd5b50565b6000815190506118f7816118d1565b92915050565b600060208284031215611913576119126111ec565b5b6000611921848285016118e8565b91505092915050565b6000819050919050565b611945611940826112a7565b61192a565b82525050565b60006119578285611934565b6020820191506119678284611934565b6020820191508190509392505050565b7f526576657273655265676973747261723a205265736f6c76657220616464726560008201527f7373206d757374206e6f74206265203000000000000000000000000000000000602082015250565b60006119d3603083611733565b91506119de82611977565b604082019050919050565b60006020820190508181036000830152611a02816119c6565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611a65602683611733565b9150611a7082611a09565b604082019050919050565b60006020820190508181036000830152611a9481611a58565b9050919050565b600081519050611aaa81611228565b92915050565b600060208284031215611ac657611ac56111ec565b5b6000611ad484828501611a9b565b91505092915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000611b16611b11611b0c84611add565b611348565b611ae7565b9050919050565b611b2681611afb565b82525050565b600060a082019050611b4160008301886112b1565b611b4e60208301876112b1565b611b5b60408301866115b3565b611b6860608301856115b3565b611b756080830184611b1d565b9695505050505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611bb5602083611733565b9150611bc082611b7f565b602082019050919050565b60006020820190508181036000830152611be481611ba8565b905091905056fea26469706673582212200770583fb06e01bb7023c978ff15b8c090c68a11fc87157912654bd623a66afd64736f6c63430008110033";

type ReverseRegistrarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReverseRegistrarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReverseRegistrar__factory extends ContractFactory {
  constructor(...args: ReverseRegistrarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _registry: PromiseOrValue<string>,
    _resolver: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReverseRegistrar> {
    return super.deploy(
      _registry,
      _resolver,
      overrides || {}
    ) as Promise<ReverseRegistrar>;
  }
  override getDeployTransaction(
    _registry: PromiseOrValue<string>,
    _resolver: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_registry, _resolver, overrides || {});
  }
  override attach(address: string): ReverseRegistrar {
    return super.attach(address) as ReverseRegistrar;
  }
  override connect(signer: Signer): ReverseRegistrar__factory {
    return super.connect(signer) as ReverseRegistrar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReverseRegistrarInterface {
    return new utils.Interface(_abi) as ReverseRegistrarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReverseRegistrar {
    return new Contract(address, _abi, signerOrProvider) as ReverseRegistrar;
  }
}
